---
- name: gluu
  hosts: localhost
  connection: local
  become: True
  become_user: root
  gather_facts: False
  tasks:

    - name: install epel repo
      yum:
        state: latest
        name: "{{ required_repositories }}"
      vars:
        required_repositories:
          - epel-release

    - name: gluu repo
      get_url:
        url: https://repo.gluu.org/centos/Gluu-centos7.repo
        dest: /etc/yum.repos.d/gluu.repo
        owner: root
        group: root
        mode: '0444'

    - name: get repo key
      get_url:
        url: https://repo.gluu.org/centos/RPM-GPG-KEY-GLUU
        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-GLUU
        owner: root
        group: root
        mode: '0444'

    - name: import key
      shell: |
        rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-GLUU

    - name: install required packages
      yum:
        state: present
        name: "{{ required_packages }}"
      vars:
        required_packages:
          - gluu-server

    - name: gluu started/enabled
      systemd:
        name: systemd-nspawn@gluu_server.service
        state: started
        enabled: yes

    - name: determine if admin credential exists
      stat:
        path: /etc/gluu_admin
      register: gluu_admin_file

    - name: generate gluu admin credential
      shell: |
        echo -n $(openssl rand -base64 32) > /etc/gluu_admin
        chmod 400 /etc/gluu_admin
      no_log: True
      when: gluu_admin_file.exists == false

    - name: register gluu admin credential
      shell: |
        cat /etc/gluu_admin
      no_log: True
      register: gluu_admin_credential

    - name: gluu setup
      shell: |
        # login
        /sbin/gluu-serverd login
        # install packages
        yum -y install python2-certbot-apache memcached
        # gluu setup
        cd /install/community-edition-setup
        echo "{{ domain_name }}
        {{ friendly_name }}
        {{ gluu_admin_file.stdout }}
        Yes
        Yes
        Yes
        Yes
        Yes
        No
        No
        Y" | ./setup.py
        # certbot prep
        systemctl stop httpd
        mv /etc/certs/httpd.crt /etc/certs/httpd.crt.beforecertbot
        mv /etc/certs/httpd.key /etc/certs/httpd.key.beforecertbot
        cp /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts.beforecertbot
        # certbot generate
        certbot certonly --standalone --agree-tos --email {{ certbot_email }} --domains {{ friendly_name }}
        ln -s /etc/letsencrypt/live/sso.chadg.net/fullchain.pem /etc/certs/httpd.crt
        ln -s /etc/letsencrypt/live/sso.chadg.net/privkey.pem /etc/certs/httpd.key
        # certbot import
        openssl x509 -outform der -in /etc/certs/httpd.crt -out /etc/certs/httpd.der
        /opt/amazon-corretto*-linux-x64/bin/keytool -delete -alias {{ friendly_name }}_httpd -keystore /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts -storepass changeit
        /opt/amazon-corretto*-linux-x64/bin/keytool -importcert -noprompt -file /etc/certs/httpd.der -keystore /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts -alias {{ friendly_name }}_httpd -storepass changeit
        # renewal cron script
        echo "certbot renew
        openssl x509 -outform der -in /etc/certs/httpd.crt -out /etc/certs/httpd.der
        /opt/amazon-corretto*-linux-x64/bin/keytool -delete -alias {{ friendly_name }}_httpd -keystore /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts -storepass changeit
        /opt/amazon-corretto*-linux-x64/bin/keytool -importcert -noprompt -file /etc/certs/httpd.der -keystore /opt/amazon-corretto*-linux-x64/jre/lib/security/cacerts -alias {{ friendly_name }}_httpd -storepass changeit" > /usr/local/bin/gluu_certbot_renew
        chmod 500 /usr/local/bin/gluu_certbot_renew
        echo "0 4 1 */2 * /usr/local/bin/gluu_certbot_renew" > /var/spool/cron/root
        logout
        # restart service
        systemctl restart systemd-nspawn@gluu_server.service 
      args:
        executable: /bin/bash
        warn: no
